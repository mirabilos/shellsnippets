#!/bin/mksh
# $MirOS: contrib/hosted/tg/jupp2bdf,v 1.1 2011/11/20 00:11:04 tg Exp $
#-
# Copyright © 2011
#	Thorsten Glaser <tg@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Convert an editable STARTxCHAR‥ENDxCHAR block into BDF format

read x charname
if [[ $x != STARTxCHAR ]]; then
	print E: no STARTxCHAR
	exit 1
fi
set -A lines -- "STARTCHAR $charname"
integer w=0 h=0
while IFS= read -r line; do
	set -A words -- $line
	case $line {
	(ENCODING\ 'U+'+([0-9A-Fa-f]))
		x=${words[1]}
		integer c=0x${x#U+}
		line="ENCODING $((c))"
		;;
	(BBX\ +([0-9])\ +([0-9])?( *))
		w=${words[1]}
		h=${words[2]}
		if (( w > 32 )); then
			print E: $w is too wide
			exit 1
		fi
		;;
	}
	lines[${#lines[*]}]=$line
	[[ $line = BITMAP ]] && break
done
if (( w <= 8 )); then
	(( shiftbits = 8 - w ))
	(( uw = 5 ))
elif (( w <= 16 )); then
	(( shiftbits = 16 - w ))
	(( uw = 7 ))
elif (( w <= 24 )); then
	(( shiftbits = 24 - w ))
	(( uw = 9 ))
else
	(( shiftbits = 32 - w ))
	(( uw = 11 ))
fi
ch=0
while (( ch++ < h )); do
	IFS= read -r line
	linx=${line//[ .]/0}
	linx=${linx//[#*]/1}
	if [[ $linx != +([01]) ]]; then
		print -r "E: not a valid bitmap line: $line"
		exit 1
	fi
	if (( ${#linx} != w )); then
		print -r "E: not a valid bitmap line: $line"
		exit 1
	fi
	typeset -Uui16 -Z$uw bhex=2#$linx
	(( bhex <<= shiftbits ))
	b=${bhex#16#}
	lines[${#lines[*]}]=$b
done
IFS= read -r line
if [[ $line != ENDxCHAR ]]; then
	print E: no ENDxCHAR
	exit 1
fi
for line in "${lines[@]}" ENDCHAR; do
	print -r -- "$line"
done
exit 0
