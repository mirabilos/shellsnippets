roff2htm_rcsid='$MirOS: src/scripts/roff2htm,v 1.117 2025/04/23 01:13:45 tg Exp $'
# $ekkoBSD: catman2html.sh,v 1.2 2004/03/07 03:02:53 stephen Exp $
#-
# Copyright (c) 2004, 2005, 2006, 2007, 2011, 2012, 2014, 2015,
#		2016, 2017, 2018, 2020, 2021, 2022
#	mirabilos <m$(date +%Y)@mirbsd.de>
# Original version for ekkoBSD by:
# Copyright (c) 2004
#	Stephen Paskaluk <sap@mirbsd.org>
# Parts of the regular expression set below are based upon work by:
# Copyright (c) 1995
#	Panagiotis J. Christias <christia@theseas.ntua.gr>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‚Äê
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided ‚ÄúAS IS‚Äù and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person‚Äôs immediate fault when using the work as intended.
#-
# Routines for converting catman pages and nrcon(1)d papers to HTML.
# ATTENTION: this file contains embedded white‚Äë, backspace and high-
#	     bit-on control characters! Use ‚Äújupp --asis $0‚Äù to edit
# Note this file contains magic and can‚Äôt be edited as UTF-8 either.
# Note this script assumes MirBSD filesystem interna: ino_t=uint32_t

set -e
set -o pipefail
set +e

# initialise globals
roff2htm_gendate=$(date +"%F %T")		# current time
set -A roff2htm_inodecache			# inode cache (empty)
roff2htm_machine=$(uname -m)			# i386, sparc

function set_conversion_man {
	function do_convert {
		do_convert_internal man "$@"
	}
}
function set_conversion_paper {
	function do_convert {
		do_convert_internal paper "$@"
	}
}
set_conversion_man

function set_target_absolute {
	roff2htm_rel=http://www.mirbsd.org/
}
function set_target_relative {
	roff2htm_rel=../
}
set_target_relative

function do_convert_internal_man {
	sed \
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z:]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z:]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e 's#<_#‚â§#g' -e 's#>_#‚â•#g'				\
	    -e 'y#&<>#¡˛ˇ#'						\
									\
	    -e 's#[Oo][Oo]++#‚Ä¢#g'					\
	    -e 's#_||#_|_|#g'					\
	    -e 's#+_#¬±#g'						\
									\
	    -e '/^[A-z][ 0-9A-z]*$/{
		s/\(.\)\1/\1/g
		s/\(.\)[~_]/\1/g
		h
		s/[^A-Za-z0-9.:_-]/_/g
		G
		s`^\(.*\)\n\(.*\)$`</pre><h2 id="Sh.\1"><a href="#Sh.\1">\2</a></h2><pre>`
	    }'								\
	    -e '/^  \([A-z][ -%'\''-;=?-~]*\)$/{
		s//\1/
		s/\(.\)\1/\1/g
		s/\(.\)[~_]/\1/g
		h
		s/[^A-Za-z0-9.:_-]/_/g
		G
		s`^\(.*\)\n\(.*\)$`</pre><h3 id="Ss.\1"><a href="#Ss.\1">\2</a></h3><pre>`
	    }'								\
									\
	    -e 's#\([^~<>Ä-ø][Ä-ø]*\)~#\1ÃÖ#g'				\
	    -e 's#\([^]\)~_#\1_ÃÖ #g'					\
	    -e 's#\([^]\)\([^<>_Ä-ø][Ä-ø]*\)\([ÃÖ]*\)_#\1_\2\3#g'	\
	    -e 's#\([^<>Ä-ø]\)[Ä-ø]*\([ÃÖ]*\)\([^<>Ä-ø][Ä-ø]*\)#<\1<\3\2>#g' \
	    -e 's#\(<_<\([^>_]*\)>\)\1#<G>\2</G>#g'			\
	    -e 's#<_<\([^>_]*\)>#<i>\1</i>#g'				\
	    -e 's#<.<\([^>]*\)>#<b>\1</b>#g'				\
	    -e 's###g'							\
									\
	    -e 's#</\([biG]\)><\1>##g'					\
	    -e 's#</\([biG]\)>\([- -*./:;?@^_~]*\)<\1>#\2#g'		\
	    -e 's#\([- 0-9A-z]\)\([$/_-]*\)\(<[biG]>\)#\1\3\2#g'	\
	    -e 's#\(</[biG]>\)\([$/_-]*\)\([- 0-9A-z]\)#\2\1\3#g'	\
									\
	    -e 's#(\(3p\)#(<|\1|>#g'					\
	    -e 's#(\([1-9]\)#(<|\1|>#g'					\
	    -e 's#(\([PSUG][MSN][DMU]\)#(<|\1|>#g'			\
	    -e 's#(\(PAPERS\)#(<|\1|>#g'				\
	    -e 's#\(|>\)\(</[biG]>\))\([- ,.0-9A-z]\)#\1)\2\3#g'	\
									\
	    -e '/^ /s#\([0-9A-z][-.,0-9A-z:]*\)(<|\([^|]*\)|>)#<a href="'$roff2htm_rel'man\2/\1.htm">&</a>#g' \
	    -e 's#\("\.\./man\)GNU\(/[^"]*\.htm\)"#\1INFO\2l"#g'	\
	    -e 's#<|\([^|]*\)|>#\1#g'					\
	    -e 's#)\(</[biG]>\)\([- 0-9A-z]\)#\1)\2#g'			\
									\
	    -e 's/¡/\&#38;/g'						\
	    -e 's/˛/\&#60;/g'						\
	    -e 's/ˇ/\&#62;/g'						\
									\
	    -e 's#<G>#<b><i>#g' -e 's#</G>#</i></b>#g'			\
	    -e 's#</b><b>##g'						\
									\
	    -e '1s#^#<pre>#'						\
	    -e '$s#$#</pre>#'						\
	    -e 's#<pre></pre>##g'					\
	    -e 's#</pre><pre>##g'					\

}

function do_convert_internal_paper {
	sed \
	    -e '/-$/N
{
s/\([0-9A-z][-.,0-9A-z:]*\)-\n\(  *\)\([0-9A-z][-.,0-9A-z:]*([1-9][A-z]*)\)\([^ ]*\) /\1\3\4\
\2/
}'									\
	    -e 's#<_#‚â§#g' -e 's#>_#‚â•#g'				\
	    -e 'y#&<>#¡˛ˇ#'						\
									\
	    -e 's#[Oo][Oo]++#‚Ä¢#g'					\
	    -e 's#_||#_|_|#g'					\
	    -e 's#+_#¬±#g'						\
									\
	    -e 's#\([^~<>Ä-ø][Ä-ø]*\)~#\1ÃÖ#g'				\
	    -e 's#\([^]\)~_#\1_ÃÖ #g'					\
	    -e 's#\([^]\)\([^<>_Ä-ø][Ä-ø]*\)\([ÃÖ]*\)_#\1_\2\3#g'	\
	    -e 's#\([^<>Ä-ø]\)[Ä-ø]*\([ÃÖ]*\)\([^<>Ä-ø][Ä-ø]*\)#<\1<\3\2>#g' \
	    -e 's#\(<_<\([^>_]*\)>\)\1#<G>\2</G>#g'			\
	    -e 's#<_<\([^>_]*\)>#<i>\1</i>#g'				\
	    -e 's#<.<\([^>]*\)>#<b>\1</b>#g'				\
	    -e 's###g'							\
									\
	    -e 's#</\([biG]\)><\1>##g'					\
	    -e 's#</\([biG]\)>\([- -*./:;?@^_~]*\)<\1>#\2#g'		\
	    -e 's#\([- 0-9A-z]\)\([$/_-]*\)\(<[biG]>\)#\1\3\2#g'	\
	    -e 's#\(</[biG]>\)\([$/_-]*\)\([- 0-9A-z]\)#\2\1\3#g'	\
									\
	    -e 's#(\(3p\)#(<|\1|>#g'					\
	    -e 's#(\([1-9]\)#(<|\1|>#g'					\
	    -e 's#(\([PSUG][MSN][DMU]\)#(<|\1|>#g'			\
	    -e 's#(\(PAPERS\)#(<|\1|>#g'				\
	    -e 's#\(|>\)\(</[biG]>\))\([- ,.0-9A-z]\)#\1)\2\3#g'	\
									\
	    -e '/^ /s#\([0-9A-z][-.,0-9A-z:]*\)(<|\([^|]*\)|>)#<a href="'$roff2htm_rel'man\2/\1.htm">&</a>#g' \
	    -e 's#\("\.\./man\)GNU\(/[^"]*\.htm\)"#\1INFO\2l"#g'	\
	    -e 's#<|\([^|]*\)|>#\1#g'					\
	    -e 's#)\(</[biG]>\)\([- 0-9A-z]\)#\1)\2#g'			\
									\
	    -e 's/¡/\&#38;/g'						\
	    -e 's/˛/\&#60;/g'						\
	    -e 's/ˇ/\&#62;/g'						\
									\
	    -e 's#<G>#<b><i>#g' -e 's#</G>#</i></b>#g'			\
	    -e 's#</b><b>##g'						\
									\
	    -e '1s#^#<pre>#'						\
	    -e '$s#$#</pre>#'						\
	    -e 's#<pre></pre>##g'					\
	    -e 's#</pre><pre>##g'					\

}

function do_convert_internal {
	local line
	local fn=do_convert_internal_$1; shift
	local -i _nl=0

	col -x | "$fn" "$@" | while IFS= read -r line; do
		if [[ -n $line ]]; then
			(( _nl )) && [[ $line != '</pre>'* ]] && print
			print -r -- "$line"
			_nl=0
		else
			_nl=1
		fi
	done
}

function output_header {
	print -r -- '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta http-equiv="Content-Style-Type" content="text/css" />
 <meta name="tdm-reservation" content="1" />
 <meta name="MSSmartTagsPreventParsing" content="TRUE" />
 <link rel="canonical" href="http://www.mirbsd.org/man'$roff2htm_machine/$1.$2'" />
 <title>RTFM '$1\($2')</title>
 <meta name="robots" content="index, follow" />
 <style type="text/css"><!--/*--><![CDATA[/*><!--*/
	code,
	kbd,
	pre,
	samp,
	tt {
		font-family:FixedMisc, GlassTTYVT220, Inconsolatazi4varl_qu,
		    Fixed, "Inconsolata LGC", Inconsolata, monospace;
		font-size:1em;
	}
	body {
		background-color:#000000;
		color:#666666;
		font-family:"Gentium Plus", Gentium, "Gentium Basic",
		    "Bitstream Vera Serif", "DejaVu Serif", FreeSerif, serif;
		font-feature-settings: "ss01";
	}
	a {
		color:inherit;
		text-decoration:none;
		border-bottom:1px dashed;
	}
	a:visited {
		text-decoration:none;
		border-bottom:1px dotted;
	}
	a:hover {
		text-decoration:none;
		border-bottom:1px double;
	}
	pre {
		line-height:1.12;
		color:#FFB000;
		margin:0.5em 0;
	}
	b {
		color:#FFEF00;
		font-weight:normal;
	}
	i {
		font-style:normal;
		border-bottom:1px solid #FFB000;
	}
	b i,
	i b {
		color:#FFEF00;
		font-weight:normal;
		font-style:normal;
		border-bottom:1px solid #FFCC00;
	}
	h1,
	h2,
	h3 {
		color:#FFCC00;
		font-weight:normal;
	}
	h1 {
		font-size:x-large;
		max-width:26em;
		margin:0.5em 0 0.75em 81px;
		text-indent:-81px;
	}
	h1 tt {
		white-space:pre;
	}
	h2 {
		font-size:large;
		margin:1em 0 0.5em 0em;
	}
	h3 {
		font-size:medium;
		margin:0.875em 0 0.5em 1.2em;
	}
	#footerdiv {
		max-width:46em;
		line-height:1.5;
		margin:0.25em 0;
	}
	.footer1 {
		font-size:xx-small;
	}
	.footer1 tt {
		white-space:nowrap;
	}
	.footer3 {
		font-size:x-small;
	}
	#footerImprint {
		color:#FFEF00;
	}
	a[href^="http://"]:after,
	a[href^="https://"]:after {
		content:"‚û∂";
		color:#00AAFF;
		font-size:medium;
		margin:0 0 0 3px;
		white-space:nowrap;
	}
 /*]]>*/--></style>
 <script type="text/javascript"><!--//--><![CDATA[//><!--
  window.onload = function () {
	var fivesp = document.getElementById("fivesp");
	var h1 = fivesp.parentElement;
	var w = 0 + fivesp.offsetWidth;
	if (w) {
		w = w / 5.0;
		h1.style.marginLeft = (w * 9) + "px";
		h1.style.textIndent = (w * -4) + "px";
		h1.removeChild(fivesp);

		w = (w * 2) + "px";
		var h3s = document.getElementsByTagName("h3");
		var i;
		for (i = 0; i < h3s.length; ++i)
			h3s[i].style.marginLeft = w;
	}
	if (!(/\.(mbsd\.evolvis\.org|mirbsd\.(org|de))$/.test('.'+window.location.hostname))) {
		var el = document.getElementById("footerImprint");
		el.style.display = "none";
	}
  };
 //--><!]]></script>
</head><body>
<h1><tt id="fivesp">     </tt>MirBSD manpage: <a href="'$roff2htm_rel'man'$2/$1'.htm">'$1\($2')</a></h1>'
}

function output_footer {
	print -r -- '
<hr /><div id="footerdiv">
<p class="footer1">Generated on <tt>'$roff2htm_gendate'</tt> by
 <tt>'$roff2htm_rcsid'</tt>‚Ää‚Äî‚Ää<span
 style="font-size:3pt; font-style:italic;">This product includes material
 provided by <b>mirabilos</b>.</span></p>
<p class="footer2">These manual pages and other documentation are <a
 href="'$roff2htm_rel'man7/BSD-Licence.htm">copyrighted</a> by their
 respective writers; their sources are available via AnonCVS or <a
 href="http://cvs.mirbsd.de/">CVSweb</a>. The rest is Copyright ¬© 2002‚Äì2025 <a
 href="http://www.mirbsd.org/">MirBSD</a> and ‚íª The MirOS Licence.</p>
<p class="footer3">This manual page‚Äôs HTML representation is supposed to be <a
 href="http://validator.w3.org/check/referer">valid XHTML/1.1</a>; if not,
 please send a bug report‚Ää‚Äî‚Äädiffs preferred.</p>
<p id="footerImprint"><a href="/imprint.htm">Kontakt / <b>Impressum</b>
 &amp; Datenschutzerkl√§rung</a></p>
</div>
</body></html>'
}

function do_conversion {
	output_header ${1:-missing-pagename} ${2:-0}
	do_convert ${2:-0} || return 1
	output_footer
}

# do_conversion_verbose title section infile outfile
function do_conversion_verbose {
	local e

	print -nru2 -- $3 ‚Üí $4
	do_conversion $1 $2 <$3 >$4
	e=$?
	print -u2
	return $e
}

# convert_page /path/to/man.cat1 /targetpath
function convert_page {
	local fn=$1 page sect tn
	local -Uui ino=$(stat -Lf %i $fn 2>/dev/null)
	page=${fn##*/}			# basename
	page=${page%.0}			# manual page name
	sect=${fn%/*}			# dirname
	sect=${sect##*/cat}		# archsection
	sect=${sect%%/*}		# section
	tn=man${sect}/${page}.htm	# target file

	if (( ino )) && [[ -n ${roff2htm_inodecache[ino]} ]]; then
		# source file is linked to a file we know
		print -ru2 -- $tn ‚Üê ${roff2htm_inodecache[ino]}
		ln -f $2/${roff2htm_inodecache[ino]} $2/$tn
		# patch in the additional name(s)
		ed -s $2/$tn <<-EOF
			/<title>/s#</title>#, $page($sect)&#
			/<h1>/s#</h1>#, <a href="$roff2htm_rel$tn">$page($sect)</a>&#
			wq
		EOF
		return $?
	fi
	# store target filename in the inode cache
	roff2htm_inodecache[ino]=$tn
	do_conversion_verbose $page $sect $fn $2/$tn
}

# output_htaccess >‚Ä¶/.htaccess
function output_htaccess {
	print DirectoryIndex /dev/null
	print "AddType 'text/html; charset=utf-8' htm"
}

# convert_all /path/to/share/man /targetpath
function convert_all {
	local tp=${2:-$(pwd)/mbsdman}		# target basepath
	local x f e

	(find ${1:-/usr/share/man}/cat{[1-9],3p} -name \*.0 2>/dev/null | \
	    sort -f) |&
	for x in 1 2 3 3p 4 5 6 7 8 9; do
		mkdir -p $tp/man$x		# one per section
		output_htaccess >$tp/man$x/.htaccess || e=1
	done
	while read -p f; do
		convert_page $f $tp || e=1	# any subpages
	done
	return $e
}
