#!/bin/bash
# $MirOS: contrib/hosted/tg/deb/hookdir/D02varcacheapt,v 1.1 2023/01/28 04:04:03 tg Exp $
#-
# Copyright © 2014, 2018, 2019, 2023
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Configure $base and $this at the beginning of the file. Do ensure:
# • base must be URI safe since we do not encode it for sources.list
# • this must be a valid basename for sources.list.d: [A-Za-z0-9._-]

base=/var/cache/apt
this=D02varcacheapt
msg() {
	local level=$1
	shift
	printf >&2 '%s: %s: %s\n' "$level" "$this" "$*"
}

unset LANGUAGE
LC_ALL=C; export LC_ALL
set -e
mydir=$(dirname "$0")
if test -d /etc/apt/sources.list.d; then
	slist=/etc/apt/sources.list.d/$this.list
	spfx='deb [trusted=yes]'
else
	slist=/etc/apt/sources.list
	spfx=deb
fi

test -d "$base/." || {
	msg E "base '$base' does not exist"
	exit 1
}

shopt -s extglob
base=${base%%*(/)}
pstr=${base//\//_}_._Packages

msg I "creating Packages file for local APT cache in $base"
rm -f "$base/Packages"
(cd "$base"
#dpkg-scanpackages -h md5 -m . >Packages 2>/dev/null || \
    dpkg-scanpackages -m . >Packages 2>/dev/null || \
    dpkg-scanpackages . /dev/null >Packages)
paste -d_ <(sed -n '/^Package: /s///p' "$base/Packages") \
    <(sed -n '/^Version: /s///p' "$base/Packages") \
    <(sed -n '/^Architecture: /s///p' "$base/Packages") | \
    sed 's/^/N: /' >&2
msg I updating APT repository information
cp "$base/Packages" "/var/lib/apt/lists/$pstr"
echo "$spfx file://$base ./" >>"$slist"
if test -x "$mydir/D50apt-update" || \
    test -x "$mydir/D50apt-upgrade"; then
	: 'nothing; rely on the operator to DTRT'
else
	apt-cache gencaches
fi
msg I made $(grep -c '^Package: ' "$base/Packages") packages available from "$base"
exit 0
